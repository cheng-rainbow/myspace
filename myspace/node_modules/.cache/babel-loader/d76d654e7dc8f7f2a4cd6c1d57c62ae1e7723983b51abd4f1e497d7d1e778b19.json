{"ast":null,"code":"import $ from 'jquery';\nimport { jwtDecode } from 'jwt-decode';\nconst modulesUser = {\n  state: {\n    id: \"\",\n    username: \"\",\n    photo: \"\",\n    followerCount: 0,\n    access: \"\",\n    refresh: \"\",\n    is_login: false\n  },\n  getters: {\n    updateUser: (state, user) => {\n      state.id = user.id;\n      state.username = user.username;\n      state.photo = user.photo;\n      state.followerCount = user.followerCount;\n      state.access = user.access;\n      state.refresh = user.refresh;\n      state.is_login = user.is_login;\n    }\n  },\n  mutations: {},\n  actions: {\n    login: (context, data) => {\n      $.ajax({\n        url: \"https://app165.acapp.acwing.com.cn/api/token/\",\n        type: \"POST\",\n        data: {\n          username: data.username,\n          password: data.password\n        },\n        success(resp) {\n          const {\n            access,\n            refresh\n          } = resp;\n          const access_obj = jwtDecode(access);\n          $.ajax({\n            url: \"https://app165.acapp.acwing.com.cn/myspace/getinfo/\",\n            type: \"GET\",\n            data: {\n              user_id: access_obj.user_id\n            },\n            headers: {\n              'Authorization': \"Bearer \" + access\n            },\n            success(resp) {\n              context.commit(\"updateUser\", {\n                ...resp,\n                access: access,\n                refresh: refresh,\n                is_login: true\n              });\n            }\n          });\n        }\n      });\n    }\n  },\n  modules: {}\n};\nexport default modulesUser;","map":{"version":3,"names":["$","jwtDecode","modulesUser","state","id","username","photo","followerCount","access","refresh","is_login","getters","updateUser","user","mutations","actions","login","context","data","ajax","url","type","password","success","resp","access_obj","user_id","headers","commit","modules"],"sources":["D:/a.project.vscode/项目/vue/myspace/src/store/user.js"],"sourcesContent":["import $ from 'jquery';\r\nimport {jwtDecode} from 'jwt-decode';\r\n\r\n\r\n\r\nconst modulesUser = {\r\n    state: {\r\n        id : \"\",\r\n        username : \"\",\r\n        photo : \"\",\r\n        followerCount : 0,\r\n        access: \"\",\r\n        refresh: \"\",\r\n        is_login : false,\r\n    },\r\n\r\n    getters: {\r\n        updateUser : (state, user) => {\r\n            state.id = user.id;\r\n            state.username = user.username;\r\n            state.photo = user.photo;\r\n            state.followerCount = user.followerCount;\r\n            state.access = user.access;\r\n            state.refresh = user.refresh;\r\n            state.is_login = user.is_login;\r\n\r\n        }\r\n    },\r\n\r\n    mutations: {\r\n    },\r\n\r\n    actions: {\r\n        login : (context, data) => {\r\n            $.ajax({\r\n                url : \"https://app165.acapp.acwing.com.cn/api/token/\",\r\n                type : \"POST\",  \r\n                data : {\r\n                    username : data.username,\r\n                    password : data.password,\r\n                },\r\n                success(resp) {\r\n                    const {access, refresh} = resp;\r\n                    const access_obj = jwtDecode(access);\r\n                    $.ajax({\r\n                        url: \"https://app165.acapp.acwing.com.cn/myspace/getinfo/\",\r\n                        type: \"GET\",\r\n                        data : {\r\n                            user_id: access_obj.user_id,\r\n                        },\r\n                        headers: {\r\n                            'Authorization' : \"Bearer \" + access,\r\n                        },\r\n                        success(resp) {\r\n                            context.commit(\"updateUser\", {\r\n                                ...resp,\r\n                                access : access,\r\n                                refresh: refresh,\r\n                                is_login : true,\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    },\r\n\r\n    modules: {\r\n    }\r\n}\r\n\r\nexport default modulesUser;\r\n"],"mappings":"AAAA,OAAOA,CAAC,MAAM,QAAQ;AACtB,SAAQC,SAAS,QAAO,YAAY;AAIpC,MAAMC,WAAW,GAAG;EAChBC,KAAK,EAAE;IACHC,EAAE,EAAG,EAAE;IACPC,QAAQ,EAAG,EAAE;IACbC,KAAK,EAAG,EAAE;IACVC,aAAa,EAAG,CAAC;IACjBC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAG;EACf,CAAC;EAEDC,OAAO,EAAE;IACLC,UAAU,EAAGA,CAACT,KAAK,EAAEU,IAAI,KAAK;MAC1BV,KAAK,CAACC,EAAE,GAAGS,IAAI,CAACT,EAAE;MAClBD,KAAK,CAACE,QAAQ,GAAGQ,IAAI,CAACR,QAAQ;MAC9BF,KAAK,CAACG,KAAK,GAAGO,IAAI,CAACP,KAAK;MACxBH,KAAK,CAACI,aAAa,GAAGM,IAAI,CAACN,aAAa;MACxCJ,KAAK,CAACK,MAAM,GAAGK,IAAI,CAACL,MAAM;MAC1BL,KAAK,CAACM,OAAO,GAAGI,IAAI,CAACJ,OAAO;MAC5BN,KAAK,CAACO,QAAQ,GAAGG,IAAI,CAACH,QAAQ;IAElC;EACJ,CAAC;EAEDI,SAAS,EAAE,CACX,CAAC;EAEDC,OAAO,EAAE;IACLC,KAAK,EAAGA,CAACC,OAAO,EAAEC,IAAI,KAAK;MACvBlB,CAAC,CAACmB,IAAI,CAAC;QACHC,GAAG,EAAG,+CAA+C;QACrDC,IAAI,EAAG,MAAM;QACbH,IAAI,EAAG;UACHb,QAAQ,EAAGa,IAAI,CAACb,QAAQ;UACxBiB,QAAQ,EAAGJ,IAAI,CAACI;QACpB,CAAC;QACDC,OAAOA,CAACC,IAAI,EAAE;UACV,MAAM;YAAChB,MAAM;YAAEC;UAAO,CAAC,GAAGe,IAAI;UAC9B,MAAMC,UAAU,GAAGxB,SAAS,CAACO,MAAM,CAAC;UACpCR,CAAC,CAACmB,IAAI,CAAC;YACHC,GAAG,EAAE,qDAAqD;YAC1DC,IAAI,EAAE,KAAK;YACXH,IAAI,EAAG;cACHQ,OAAO,EAAED,UAAU,CAACC;YACxB,CAAC;YACDC,OAAO,EAAE;cACL,eAAe,EAAG,SAAS,GAAGnB;YAClC,CAAC;YACDe,OAAOA,CAACC,IAAI,EAAE;cACVP,OAAO,CAACW,MAAM,CAAC,YAAY,EAAE;gBACzB,GAAGJ,IAAI;gBACPhB,MAAM,EAAGA,MAAM;gBACfC,OAAO,EAAEA,OAAO;gBAChBC,QAAQ,EAAG;cACf,CAAC,CAAC;YACN;UACJ,CAAC,CAAC;QACN;MACJ,CAAC,CAAC;IACN;EACJ,CAAC;EAEDmB,OAAO,EAAE,CACT;AACJ,CAAC;AAED,eAAe3B,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}